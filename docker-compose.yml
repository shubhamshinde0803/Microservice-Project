services:
  postgres:
    container_name: ms_pg_sql
    image: postgres
    environment:
      POSTGRES_USER: shubham
      POSTGRES_PASSWORD: shubham
      PGDATA: /var/lib/postgresql/data

    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - microservices-net
    restart: unless-stopped

  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - microservices-net
    restart: unless-stopped

  mongodb:
    container_name: ms_mongo_db
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=shubham
      - MONGO_INITDB_ROOT_PASSWORD=shubham

  mongo-express:
    container_name: ms_mongo_express
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=shubham
      - ME_CONFIG_MONGODB_ADMINPASSWORD=shubham
      - ME_CONFIG_MONGODB_SERVER=mongodb

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-net

  mail-dev:
    container_name: ms_mail_dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025

  config-service:
    container_name: ms_config_service
    image: config-service:latest
    build:
      context: ./services/config-server
      dockerfile: Dockerfile
    ports:
      - 8888:8888
    networks:
      - microservices-net
    depends_on:
      - postgres

  discovery-service:
    image: discovery-service:latest
    build:
      context: ./services/discovery
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - microservices-net
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - SPRING_CLOUD_CONFIG_URI=http://ms_config_service:8888
    depends_on:
      - config-service

  customer-service:
    image: customer-service:latest
    build:
      context: ./services/customer
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    networks:
      - microservices-net
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - SPRING_CLOUD_CONFIG_URI=http://ms_config_service:8888
    depends_on:
      - config-service
      - discovery-service
      - mongodb

  gateway-service:
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    image: gateway-service:latest
    ports:
      - "8222:8222"
    networks:
      - microservices-net
    depends_on:
      - config-service
      - discovery-service

  notification-service:
    build:
      context: ./services/notification
      dockerfile: Dockerfile
    image: notification-service:latest
    ports:
      - "8040:8040"
    networks:
      - microservices-net
    depends_on:
      - config-service
      - mongodb
      - kafka

  order-service:
    build:
      context: ./services/order
      dockerfile: Dockerfile
    image: order-service:latest
    ports:
      - "8070:8070"
    networks:
      - microservices-net
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - SPRING_CLOUD_CONFIG_URI=http://ms_config_service:8888
    depends_on:
      - config-service
      - discovery-service
      - postgres
      - kafka

  payment-service:
    build:
      context: ./services/payment
      dockerfile: Dockerfile
    image: payment-service:latest
    ports:
      - "8060:8060"
    networks:
      - microservices-net
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - SPRING_CLOUD_CONFIG_URI=http://ms_config_service:8888
    depends_on:
      - config-service
      - discovery-service
      - postgres
      - kafka
      - order-service

  product-service:
    build:
      context: ./services/product
      dockerfile: Dockerfile
    image: product-service:latest
    ports:
      - "8050:8050"
    networks:
      - microservices-net
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - SPRING_CLOUD_CONFIG_URI=http://ms_config_service:8888
    depends_on:
      - config-service
      - discovery-service
      - postgres
      - order-service

networks:
  microservices-net:
    driver: bridge


volumes:
  postgres:
  pgadmin:
  mongo: